{
	"info": {
		"_postman_id": "4e7f5a5e-6b3e-48b7-9d5a-d8e23c46b8c3",
		"name": "Real Estate API",
		"description": "A comprehensive collection for testing the Real Estate API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Chat",
			"item": [
				{
					"name": "WebSocket Connection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "ws://{{baseUrl}}/ws",
							"protocol": "ws",
							"host": ["{{baseUrl}}"]
						}
					},
					"response": []
				},
				{
					"name": "Send Message",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "POST",
						"header": [{
							"key": "Content-Type",
							"value": "application/json"
						}],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sessionId\": \"{{chatSessionId}}\",\n    \"content\": \"Test message\",\n    \"sender\": \"user\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				},
				{
					"name": "Get Chat History",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data.token) {",
									"    pm.environment.set(\"authToken\", jsonData.data.token);",
									"}",
									"if (jsonData.data && jsonData.data.user && jsonData.data.user._id) {",
									"    pm.environment.set(\"userId\", jsonData.data.user._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						},
						"description": "Login and obtain JWT token"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"me"
							]
						},
						"description": "Get current user profile"
					},
					"response": []
				},
				{
					"name": "Create Admin User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Admin\",\n    \"email\": \"newadmin@example.com\",\n    \"password\": \"password123\",\n    \"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Create a new admin user (requires admin privileges)"
					},
					"response": []
				},
				{
					"name": "Update Password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"password123\",\n    \"newPassword\": \"newPassword123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}/password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"password"
							]
						},
						"description": "Update user password"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Delete a user (admin only)"
					},
					"response": []
				}
			],
			"description": "Endpoints for user authentication and management"
		},
		{
			"name": "Sellers",
			"item": [
				{
					"name": "Register Seller",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data._id) {",
									"    pm.environment.set(\"sellerId\", jsonData.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\",\n    \"identification\": \"ID12345\",\n    \"preferredLanguages\": [\"English\", \"Spanish\"],\n    \"username\": \"johndoe\",\n    \"password\": \"password123\",\n    \"profilePicture\": \"https://example.com/profile.jpg\",\n    \"bio\": \"Experienced real estate agent with 5 years of experience\",\n    \"socialLinks\": {\n        \"facebook\": \"https://facebook.com/johndoe\",\n        \"linkedin\": \"https://linkedin.com/in/johndoe\"\n    },\n    \"business\": {\n        \"name\": \"Doe Real Estate\",\n        \"registrationNumber\": \"BUS12345\",\n        \"designation\": \"CEO\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/sellers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers"
							]
						},
						"description": "Register a new seller"
					},
					"response": []
				},
				{
					"name": "Get All Sellers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sellers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers"
							],
							"query": [
								{
									"key": "status",
									"value": "Pending",
									"description": "Filter by status",
									"disabled": true
								}
							]
						},
						"description": "Get all sellers (admin only)"
					},
					"response": []
				},
				{
					"name": "Get Seller by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}"
							]
						},
						"description": "Get seller by ID"
					},
					"response": []
				},
				{
					"name": "Update Seller",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe Updated\",\n    \"phone\": \"9876543210\",\n    \"bio\": \"Updated bio information\",\n    \"socialLinks\": {\n        \"facebook\": \"https://facebook.com/johndoe.updated\",\n        \"linkedin\": \"https://linkedin.com/in/johndoe.updated\",\n        \"instagram\": \"https://instagram.com/johndoe.updated\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}"
							]
						},
						"description": "Update seller details"
					},
					"response": []
				},
				{
					"name": "Update Seller Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"Approved\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}",
								"status"
							]
						},
						"description": "Update seller status (admin only)"
					},
					"response": []
				},
				{
					"name": "Delete Seller",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}"
							]
						},
						"description": "Delete a seller (admin only)"
					},
					"response": []
				}
			],
			"description": "Endpoints for seller management"
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "Register Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data._id) {",
									"    pm.environment.set(\"customerId\", jsonData.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Smith\",\n    \"email\": \"jane.smith@example.com\",\n    \"phone\": \"9876543210\",\n    \"address\": \"123 Main St, Anytown, USA\",\n    \"interests\": [\"Residential\", \"Commercial\"],\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers"
							]
						},
						"description": "Register a new customer"
					},
					"response": []
				},
				{
					"name": "Get All Customers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers"
							]
						},
						"description": "Get all customers (admin only)"
					},
					"response": []
				},
				{
					"name": "Get Customer by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Get customer by ID"
					},
					"response": []
				},
				{
					"name": "Update Customer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Smith Updated\",\n    \"phone\": \"1122334455\",\n    \"address\": \"456 New St, Anytown, USA\",\n    \"interests\": [\"Residential\", \"Commercial\", \"Industrial\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Update customer details"
					},
					"response": []
				},
				{
					"name": "Delete Customer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Delete a customer (admin only)"
					},
					"response": []
				}
			],
			"description": "Endpoints for customer management"
		},
		{
			"name": "Properties",
			"item": [
				{
					"name": "Create Property",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data._id) {",
									"    pm.environment.set(\"propertyId\", jsonData.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Modern Apartment in City Center\",\n    \"type\": \"Residential\",\n    \"description\": \"A beautiful modern apartment located in the heart of the city\",\n    \"address\": {\n        \"house\": \"Apt 501\",\n        \"street\": \"123 Main Street\",\n        \"city\": \"New York\",\n        \"postalCode\": \"10001\"\n    },\n    \"price\": 500000,\n    \"discountPrice\": 480000,\n    \"beds\": 3,\n    \"baths\": 2,\n    \"options\": {\n        \"parkingSpot\": true,\n        \"furnished\": true\n    },\n    \"images\": [\n        \"https://example.com/property1.jpg\",\n        \"https://example.com/property2.jpg\",\n        \"https://example.com/property3.jpg\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/properties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties"
							]
						},
						"description": "Create a new property (seller or admin)"
					},
					"response": []
				},
				{
					"name": "Get All Properties",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/properties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties"
							],
							"query": [
								{
									"key": "type",
									"value": "Residential",
									"description": "Filter by property type",
									"disabled": true
								},
								{
									"key": "city",
									"value": "New York",
									"description": "Filter by city",
									"disabled": true
								},
								{
									"key": "minPrice",
									"value": "200000",
									"description": "Minimum price",
									"disabled": true
								},
								{
									"key": "maxPrice",
									"value": "600000",
									"description": "Maximum price",
									"disabled": true
								},
								{
									"key": "forSale",
									"value": "true",
									"description": "Available for sale",
									"disabled": true
								},
								{
									"key": "beds",
									"value": "2",
									"description": "Minimum number of bedrooms",
									"disabled": true
								},
								{
									"key": "baths",
									"value": "1",
									"description": "Minimum number of bathrooms",
									"disabled": true
								},
								{
									"key": "sellerId",
									"value": "{{sellerId}}",
									"description": "Filter by seller",
									"disabled": true
								}
							]
						},
						"description": "Get all properties with optional filters"
					},
					"response": []
				},
				{
					"name": "Get Property by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}"
							]
						},
						"description": "Get a property by ID"
					},
					"response": []
				},
				{
					"name": "Update Property",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Modern Apartment in City Center\",\n    \"description\": \"An updated description for this beautiful modern apartment\",\n    \"price\": 525000,\n    \"discountPrice\": 490000,\n    \"options\": {\n        \"parkingSpot\": true,\n        \"furnished\": false\n    },\n    \"images\": [\n        \"https://example.com/property1-updated.jpg\",\n        \"https://example.com/property2-updated.jpg\",\n        \"https://example.com/property3-updated.jpg\",\n        \"https://example.com/property4-updated.jpg\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}"
							]
						},
						"description": "Update property details (seller owner or admin)"
					},
					"response": []
				},
				{
					"name": "Update Property Availability",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forSale\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}/availability",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}",
								"availability"
							]
						},
						"description": "Update property availability status (seller owner or admin)"
					},
					"response": []
				},
				{
					"name": "Delete Property",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}"
							]
						},
						"description": "Delete a property (seller owner or admin)"
					},
					"response": []
				}
			],
			"description": "Endpoints for property management"
		},
		{
			"name": "Chats",
			"item": [
				{
 					"name": "WebSocket Connection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "ws://{{baseUrl}}/ws",
							"protocol": "ws",
							"host": ["{{baseUrl}}"]
						}
					},
					"response": []
				},
				{
					"name": "Send Message",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "POST",
						"header": [{
							"key": "Content-Type",
							"value": "application/json"
						}],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sessionId\": \"{{chatSessionId}}\",\n    \"content\": \"Test message\",\n    \"sender\": \"user\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				},
				{
					"name": "Get Chat History",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				},
				{
					"name": "Create Chat Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data.sessionId) {",
									"    pm.environment.set(\"chatSessionId\", jsonData.data.sessionId);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\": \"property_inquiry\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats"
							]
						},
						"description": "Create a new chat session"
					},
					"response": []
				},
				{
					"name": "Add Message to Chat",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"Hello, I'm interested in the property at 123 Main St. Is it still available?\",\n    \"fromBot\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"{{chatSessionId}}"
							]
						},
						"description": "Add a message to an existing chat session"
					},
					"response": []
				},
				{
					"name": "Get Chat by Session ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"{{chatSessionId}}"
							]
						},
						"description": "Get a chat session by its session ID"
					},
					"response": []
				},
				{
					"name": "Get User's Chats",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/chats/user/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"user",
								"{{userId}}"
							]
						},
						"description": "Get all chat sessions for a specific user"
					},
					"response": []
				},
				{
					"name": "Delete Chat",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"{{chatSessionId}}"
							]
						},
						"description": "Delete a chat session"
					},
					"response": []
				}
			],
			"description": "Endpoints for chat management"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:4000",
			"type": "string"
		}
	]
}{
	"info": {
		"_postman_id": "4e7f5a5e-6b3e-48b7-9d5a-d8e23c46b8c3",
		"name": "Real Estate API",
		"description": "A comprehensive collection for testing the Real Estate API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Chat",
			"item": [
				{
					"name": "WebSocket Connection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "ws://{{baseUrl}}/ws",
							"protocol": "ws",
							"host": ["{{baseUrl}}"]
						}
					},
					"response": []
				},
				{
					"name": "Send Message",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "POST",
						"header": [{
							"key": "Content-Type",
							"value": "application/json"
						}],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sessionId\": \"{{chatSessionId}}\",\n    \"content\": \"Test message\",\n    \"sender\": \"user\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				},
				{
					"name": "Get Chat History",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data.token) {",
									"    pm.environment.set(\"authToken\", jsonData.data.token);",
									"}",
									"if (jsonData.data && jsonData.data.user && jsonData.data.user._id) {",
									"    pm.environment.set(\"userId\", jsonData.data.user._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						},
						"description": "Login and obtain JWT token"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"me"
							]
						},
						"description": "Get current user profile"
					},
					"response": []
				},
				{
					"name": "Create Admin User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Admin\",\n    \"email\": \"newadmin@example.com\",\n    \"password\": \"password123\",\n    \"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Create a new admin user (requires admin privileges)"
					},
					"response": []
				},
				{
					"name": "Update Password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"password123\",\n    \"newPassword\": \"newPassword123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}/password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"password"
							]
						},
						"description": "Update user password"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Delete a user (admin only)"
					},
					"response": []
				}
			],
			"description": "Endpoints for user authentication and management"
		},
		{
			"name": "Sellers",
			"item": [
				{
					"name": "Register Seller",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data._id) {",
									"    pm.environment.set(\"sellerId\", jsonData.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\",\n    \"identification\": \"ID12345\",\n    \"preferredLanguages\": [\"English\", \"Spanish\"],\n    \"username\": \"johndoe\",\n    \"password\": \"password123\",\n    \"profilePicture\": \"https://example.com/profile.jpg\",\n    \"bio\": \"Experienced real estate agent with 5 years of experience\",\n    \"socialLinks\": {\n        \"facebook\": \"https://facebook.com/johndoe\",\n        \"linkedin\": \"https://linkedin.com/in/johndoe\"\n    },\n    \"business\": {\n        \"name\": \"Doe Real Estate\",\n        \"registrationNumber\": \"BUS12345\",\n        \"designation\": \"CEO\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/sellers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers"
							]
						},
						"description": "Register a new seller"
					},
					"response": []
				},
				{
					"name": "Get All Sellers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sellers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers"
							],
							"query": [
								{
									"key": "status",
									"value": "Pending",
									"description": "Filter by status",
									"disabled": true
								}
							]
						},
						"description": "Get all sellers (admin only)"
					},
					"response": []
				},
				{
					"name": "Get Seller by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}"
							]
						},
						"description": "Get seller by ID"
					},
					"response": []
				},
				{
					"name": "Update Seller",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe Updated\",\n    \"phone\": \"9876543210\",\n    \"bio\": \"Updated bio information\",\n    \"socialLinks\": {\n        \"facebook\": \"https://facebook.com/johndoe.updated\",\n        \"linkedin\": \"https://linkedin.com/in/johndoe.updated\",\n        \"instagram\": \"https://instagram.com/johndoe.updated\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}"
							]
						},
						"description": "Update seller details"
					},
					"response": []
				},
				{
					"name": "Update Seller Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"Approved\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}",
								"status"
							]
						},
						"description": "Update seller status (admin only)"
					},
					"response": []
				},
				{
					"name": "Delete Seller",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}"
							]
						},
						"description": "Delete a seller (admin only)"
					},
					"response": []
				}
			],
			"description": "Endpoints for seller management"
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "Register Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data._id) {",
									"    pm.environment.set(\"customerId\", jsonData.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Smith\",\n    \"email\": \"jane.smith@example.com\",\n    \"phone\": \"9876543210\",\n    \"address\": \"123 Main St, Anytown, USA\",\n    \"interests\": [\"Residential\", \"Commercial\"],\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers"
							]
						},
						"description": "Register a new customer"
					},
					"response": []
				},
				{
					"name": "Get All Customers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers"
							]
						},
						"description": "Get all customers (admin only)"
					},
					"response": []
				},
				{
					"name": "Get Customer by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Get customer by ID"
					},
					"response": []
				},
				{
					"name": "Update Customer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Smith Updated\",\n    \"phone\": \"1122334455\",\n    \"address\": \"456 New St, Anytown, USA\",\n    \"interests\": [\"Residential\", \"Commercial\", \"Industrial\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Update customer details"
					},
					"response": []
				},
				{
					"name": "Delete Customer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Delete a customer (admin only)"
					},
					"response": []
				}
			],
			"description": "Endpoints for customer management"
		},
		{
			"name": "Properties",
			"item": [
				{
					"name": "Create Property",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data._id) {",
									"    pm.environment.set(\"propertyId\", jsonData.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Modern Apartment in City Center\",\n    \"type\": \"Residential\",\n    \"description\": \"A beautiful modern apartment located in the heart of the city\",\n    \"address\": {\n        \"house\": \"Apt 501\",\n        \"street\": \"123 Main Street\",\n        \"city\": \"New York\",\n        \"postalCode\": \"10001\"\n    },\n    \"price\": 500000,\n    \"discountPrice\": 480000,\n    \"beds\": 3,\n    \"baths\": 2,\n    \"options\": {\n        \"parkingSpot\": true,\n        \"furnished\": true\n    },\n    \"images\": [\n        \"https://example.com/property1.jpg\",\n        \"https://example.com/property2.jpg\",\n        \"https://example.com/property3.jpg\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/properties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties"
							]
						},
						"description": "Create a new property (seller or admin)"
					},
					"response": []
				},
				{
					"name": "Get All Properties",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/properties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties"
							],
							"query": [
								{
									"key": "type",
									"value": "Residential",
									"description": "Filter by property type",
									"disabled": true
								},
								{
									"key": "city",
									"value": "New York",
									"description": "Filter by city",
									"disabled": true
								},
								{
									"key": "minPrice",
									"value": "200000",
									"description": "Minimum price",
									"disabled": true
								},
								{
									"key": "maxPrice",
									"value": "600000",
									"description": "Maximum price",
									"disabled": true
								},
								{
									"key": "forSale",
									"value": "true",
									"description": "Available for sale",
									"disabled": true
								},
								{
									"key": "beds",
									"value": "2",
									"description": "Minimum number of bedrooms",
									"disabled": true
								},
								{
									"key": "baths",
									"value": "1",
									"description": "Minimum number of bathrooms",
									"disabled": true
								},
								{
									"key": "sellerId",
									"value": "{{sellerId}}",
									"description": "Filter by seller",
									"disabled": true
								}
							]
						},
						"description": "Get all properties with optional filters"
					},
					"response": []
				},
				{
					"name": "Get Property by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}"
							]
						},
						"description": "Get a property by ID"
					},
					"response": []
				},
				{
					"name": "Update Property",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Modern Apartment in City Center\",\n    \"description\": \"An updated description for this beautiful modern apartment\",\n    \"price\": 525000,\n    \"discountPrice\": 490000,\n    \"options\": {\n        \"parkingSpot\": true,\n        \"furnished\": false\n    },\n    \"images\": [\n        \"https://example.com/property1-updated.jpg\",\n        \"https://example.com/property2-updated.jpg\",\n        \"https://example.com/property3-updated.jpg\",\n        \"https://example.com/property4-updated.jpg\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}"
							]
						},
						"description": "Update property details (seller owner or admin)"
					},
					"response": []
				},
				{
					"name": "Update Property Availability",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forSale\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}/availability",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}",
								"availability"
							]
						},
						"description": "Update property availability status (seller owner or admin)"
					},
					"response": []
				},
				{
					"name": "Delete Property",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}"
							]
						},
						"description": "Delete a property (seller owner or admin)"
					},
					"response": []
				}
			],
			"description": "Endpoints for property management"
		},
		{
			"name": "Chats",
			"item": [
				{
					"name": "WebSocket Connection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "ws://{{baseUrl}}/ws",
							"protocol": "ws",
							"host": ["{{baseUrl}}"]
						}
					},
					"response": []
				},
				{
					"name": "Send Message",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "POST",
						"header": [{
							"key": "Content-Type",
							"value": "application/json"
						}],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sessionId\": \"{{chatSessionId}}\",\n    \"content\": \"Test message\",\n    \"sender\": \"user\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				},
				{
					"name": "Get Chat History",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				},
				{
					"name": "Create Chat Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data.sessionId) {",
									"    pm.environment.set(\"chatSessionId\", jsonData.data.sessionId);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\": \"property_inquiry\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats"
							]
						},
						"description": "Create a new chat session"
					},
					"response": []
				},
				{
					"name": "Add Message to Chat",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"Hello, I'm interested in the property at 123 Main St. Is it still available?\",\n    \"fromBot\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"{{chatSessionId}}"
							]
						},
						"description": "Add a message to an existing chat session"
					},
					"response": []
				},
				{
					"name": "Get Chat by Session ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"{{chatSessionId}}"
							]
						},
						"description": "Get a chat session by its session ID"
					},
					"response": []
				},
				{
					"name": "Get User's Chats",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/chats/user/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"user",
								"{{userId}}"
							]
						},
						"description": "Get all chat sessions for a specific user"
					},
					"response": []
				},
				{
					"name": "Delete Chat",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"{{chatSessionId}}"
							]
						},
						"description": "Delete a chat session"
					},
					"response": []
				}
			],
			"description": "Endpoints for chat management"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base{
	"info": {
		"_postman_id": "4e7f5a5e-6b3e-48b7-9d5a-d8e23c46b8c3",
		"name": "Real Estate API",
		"description": "A comprehensive collection for testing the Real Estate API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Chat",
			"item": [
				{
					"name": "WebSocket Connection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "ws://{{baseUrl}}/ws",
							"protocol": "ws",
							"host": ["{{baseUrl}}"]
						}
					},
					"response": []
				},
				{
					"name": "Send Message",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "POST",
						"header": [{
							"key": "Content-Type",
							"value": "application/json"
						}],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sessionId\": \"{{chatSessionId}}\",\n    \"content\": \"Test message\",\n    \"sender\": \"user\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				},
				{
					"name": "Get Chat History",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data.token) {",
									"    pm.environment.set(\"authToken\", jsonData.data.token);",
									"}",
									"if (jsonData.data && jsonData.data.user && jsonData.data.user._id) {",
									"    pm.environment.set(\"userId\", jsonData.data.user._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						},
						"description": "Login and obtain JWT token"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"me"
							]
						},
						"description": "Get current user profile"
					},
					"response": []
				},
				{
					"name": "Create Admin User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Admin\",\n    \"email\": \"newadmin@example.com\",\n    \"password\": \"password123\",\n    \"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Create a new admin user (requires admin privileges)"
					},
					"response": []
				},
				{
					"name": "Update Password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"password123\",\n    \"newPassword\": \"newPassword123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}/password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"password"
							]
						},
						"description": "Update user password"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Delete a user (admin only)"
					},
					"response": []
				}
			],
			"description": "Endpoints for user authentication and management"
		},
		{
			"name": "Sellers",
			"item": [
				{
					"name": "Register Seller",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data._id) {",
									"    pm.environment.set(\"sellerId\", jsonData.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\",\n    \"identification\": \"ID12345\",\n    \"preferredLanguages\": [\"English\", \"Spanish\"],\n    \"username\": \"johndoe\",\n    \"password\": \"password123\",\n    \"profilePicture\": \"https://example.com/profile.jpg\",\n    \"bio\": \"Experienced real estate agent with 5 years of experience\",\n    \"socialLinks\": {\n        \"facebook\": \"https://facebook.com/johndoe\",\n        \"linkedin\": \"https://linkedin.com/in/johndoe\"\n    },\n    \"business\": {\n        \"name\": \"Doe Real Estate\",\n        \"registrationNumber\": \"BUS12345\",\n        \"designation\": \"CEO\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/sellers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers"
							]
						},
						"description": "Register a new seller"
					},
					"response": []
				},
				{
					"name": "Get All Sellers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sellers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers"
							],
							"query": [
								{
									"key": "status",
									"value": "Pending",
									"description": "Filter by status",
									"disabled": true
								}
							]
						},
						"description": "Get all sellers (admin only)"
					},
					"response": []
				},
				{
					"name": "Get Seller by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}"
							]
						},
						"description": "Get seller by ID"
					},
					"response": []
				},
				{
					"name": "Update Seller",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe Updated\",\n    \"phone\": \"9876543210\",\n    \"bio\": \"Updated bio information\",\n    \"socialLinks\": {\n        \"facebook\": \"https://facebook.com/johndoe.updated\",\n        \"linkedin\": \"https://linkedin.com/in/johndoe.updated\",\n        \"instagram\": \"https://instagram.com/johndoe.updated\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}"
							]
						},
						"description": "Update seller details"
					},
					"response": []
				},
				{
					"name": "Update Seller Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"Approved\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}",
								"status"
							]
						},
						"description": "Update seller status (admin only)"
					},
					"response": []
				},
				{
					"name": "Delete Seller",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}"
							]
						},
						"description": "Delete a seller (admin only)"
					},
					"response": []
				}
			],
			"description": "Endpoints for seller management"
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "Register Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data._id) {",
									"    pm.environment.set(\"customerId\", jsonData.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Smith\",\n    \"email\": \"jane.smith@example.com\",\n    \"phone\": \"9876543210\",\n    \"address\": \"123 Main St, Anytown, USA\",\n    \"interests\": [\"Residential\", \"Commercial\"],\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers"
							]
						},
						"description": "Register a new customer"
					},
					"response": []
				},
				{
					"name": "Get All Customers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers"
							]
						},
						"description": "Get all customers (admin only)"
					},
					"response": []
				},
				{
					"name": "Get Customer by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Get customer by ID"
					},
					"response": []
				},
				{
					"name": "Update Customer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Smith Updated\",\n    \"phone\": \"1122334455\",\n    \"address\": \"456 New St, Anytown, USA\",\n    \"interests\": [\"Residential\", \"Commercial\", \"Industrial\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Update customer details"
					},
					"response": []
				},
				{
					"name": "Delete Customer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Delete a customer (admin only)"
					},
					"response": []
				}
			],
			"description": "Endpoints for customer management"
		},
		{
			"name": "Properties",
			"item": [
				{
					"name": "Create Property",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data._id) {",
									"    pm.environment.set(\"propertyId\", jsonData.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Modern Apartment in City Center\",\n    \"type\": \"Residential\",\n    \"description\": \"A beautiful modern apartment located in the heart of the city\",\n    \"address\": {\n        \"house\": \"Apt 501\",\n        \"street\": \"123 Main Street\",\n        \"city\": \"New York\",\n        \"postalCode\": \"10001\"\n    },\n    \"price\": 500000,\n    \"discountPrice\": 480000,\n    \"beds\": 3,\n    \"baths\": 2,\n    \"options\": {\n        \"parkingSpot\": true,\n        \"furnished\": true\n    },\n    \"images\": [\n        \"https://example.com/property1.jpg\",\n        \"https://example.com/property2.jpg\",\n        \"https://example.com/property3.jpg\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/properties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties"
							]
						},
						"description": "Create a new property (seller or admin)"
					},
					"response": []
				},
				{
					"name": "Get All Properties",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/properties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties"
							],
							"query": [
								{
									"key": "type",
									"value": "Residential",
									"description": "Filter by property type",
									"disabled": true
								},
								{
									"key": "city",
									"value": "New York",
									"description": "Filter by city",
									"disabled": true
								},
								{
									"key": "minPrice",
									"value": "200000",
									"description": "Minimum price",
									"disabled": true
								},
								{
									"key": "maxPrice",
									"value": "600000",
									"description": "Maximum price",
									"disabled": true
								},
								{
									"key": "forSale",
									"value": "true",
									"description": "Available for sale",
									"disabled": true
								},
								{
									"key": "beds",
									"value": "2",
									"description": "Minimum number of bedrooms",
									"disabled": true
								},
								{
									"key": "baths",
									"value": "1",
									"description": "Minimum number of bathrooms",
									"disabled": true
								},
								{
									"key": "sellerId",
									"value": "{{sellerId}}",
									"description": "Filter by seller",
									"disabled": true
								}
							]
						},
						"description": "Get all properties with optional filters"
					},
					"response": []
				},
				{
					"name": "Get Property by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}"
							]
						},
						"description": "Get a property by ID"
					},
					"response": []
				},
				{
					"name": "Update Property",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Modern Apartment in City Center\",\n    \"description\": \"An updated description for this beautiful modern apartment\",\n    \"price\": 525000,\n    \"discountPrice\": 490000,\n    \"options\": {\n        \"parkingSpot\": true,\n        \"furnished\": false\n    },\n    \"images\": [\n        \"https://example.com/property1-updated.jpg\",\n        \"https://example.com/property2-updated.jpg\",\n        \"https://example.com/property3-updated.jpg\",\n        \"https://example.com/property4-updated.jpg\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}"
							]
						},
						"description": "Update property details (seller owner or admin)"
					},
					"response": []
				},
				{
					"name": "Update Property Availability",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forSale\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}/availability",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}",
								"availability"
							]
						},
						"description": "Update property availability status (seller owner or admin)"
					},
					"response": []
				},
				{
					"name": "Delete Property",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}"
							]
						},
						"description": "Delete a property (seller owner or admin)"
					},
					"response": []
				}
			],
			"description": "Endpoints for property management"
		},
		{
			"name": "Chats",
			"item": [
				{
					"name": "WebSocket Connection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "ws://{{baseUrl}}/ws",
							"protocol": "ws",
							"host": ["{{baseUrl}}"]
						}
					},
					"response": []
				},
				{
					"name": "Send Message",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "POST",
						"header": [{
							"key": "Content-Type",
							"value": "application/json"
						}],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sessionId\": \"{{chatSessionId}}\",\n    \"content\": \"Test message\",\n    \"sender\": \"user\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				},
				{
					"name": "Get Chat History",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				},
				{
					"name": "Create Chat Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data.sessionId) {",
									"    pm.environment.set(\"chatSessionId\", jsonData.data.sessionId);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\": \"property_inquiry\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats"
							]
						},
						"description": "Create a new chat session"
					},
					"response": []
				},
				{
					"name": "Add Message to Chat",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"Hello, I'm interested in the property at 123 Main St. Is it still available?\",\n    \"fromBot\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"{{chatSessionId}}"
							]
						},
						"description": "Add a message to an existing chat session"
					},
					"response": []
				},
				{
					"name": "Get Chat by Session ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"{{chatSessionId}}"
							]
						},
						"description": "Get a chat session by its session ID"
					},
					"response": []
				},
				{
					"name": "Get User's Chats",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/chats/user/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"user",
								"{{userId}}"
							]
						},
						"description": "Get all chat sessions for a specific user"
					},
					"response": []
				},
				{
					"name": "Delete Chat",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"{{chatSessionId}}"
							]
						},
						"description": "Delete a chat session"
					},
					"response": []
				}
			],
			"description": "Endpoints for chat management"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key":{
	"info": {
		"_postman_id": "4e7f5a5e-6b3e-48b7-9d5a-d8e23c46b8c3",
		"name": "Real Estate API",
		"description": "A comprehensive collection for testing the Real Estate API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Chat",
			"item": [
				{
					"name": "WebSocket Connection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "ws://{{baseUrl}}/ws",
							"protocol": "ws",
							"host": ["{{baseUrl}}"]
						}
					},
					"response": []
				},
				{
					"name": "Send Message",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "POST",
						"header": [{
							"key": "Content-Type",
							"value": "application/json"
						}],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sessionId\": \"{{chatSessionId}}\",\n    \"content\": \"Test message\",\n    \"sender\": \"user\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				},
				{
					"name": "Get Chat History",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data.token) {",
									"    pm.environment.set(\"authToken\", jsonData.data.token);",
									"}",
									"if (jsonData.data && jsonData.data.user && jsonData.data.user._id) {",
									"    pm.environment.set(\"userId\", jsonData.data.user._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						},
						"description": "Login and obtain JWT token"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"me"
							]
						},
						"description": "Get current user profile"
					},
					"response": []
				},
				{
					"name": "Create Admin User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Admin\",\n    \"email\": \"newadmin@example.com\",\n    \"password\": \"password123\",\n    \"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Create a new admin user (requires admin privileges)"
					},
					"response": []
				},
				{
					"name": "Update Password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"password123\",\n    \"newPassword\": \"newPassword123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}/password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"password"
							]
						},
						"description": "Update user password"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Delete a user (admin only)"
					},
					"response": []
				}
			],
			"description": "Endpoints for user authentication and management"
		},
		{
			"name": "Sellers",
			"item": [
				{
					"name": "Register Seller",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data._id) {",
									"    pm.environment.set(\"sellerId\", jsonData.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\",\n    \"identification\": \"ID12345\",\n    \"preferredLanguages\": [\"English\", \"Spanish\"],\n    \"username\": \"johndoe\",\n    \"password\": \"password123\",\n    \"profilePicture\": \"https://example.com/profile.jpg\",\n    \"bio\": \"Experienced real estate agent with 5 years of experience\",\n    \"socialLinks\": {\n        \"facebook\": \"https://facebook.com/johndoe\",\n        \"linkedin\": \"https://linkedin.com/in/johndoe\"\n    },\n    \"business\": {\n        \"name\": \"Doe Real Estate\",\n        \"registrationNumber\": \"BUS12345\",\n        \"designation\": \"CEO\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/sellers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers"
							]
						},
						"description": "Register a new seller"
					},
					"response": []
				},
				{
					"name": "Get All Sellers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sellers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers"
							],
							"query": [
								{
									"key": "status",
									"value": "Pending",
									"description": "Filter by status",
									"disabled": true
								}
							]
						},
						"description": "Get all sellers (admin only)"
					},
					"response": []
				},
				{
					"name": "Get Seller by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}"
							]
						},
						"description": "Get seller by ID"
					},
					"response": []
				},
				{
					"name": "Update Seller",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe Updated\",\n    \"phone\": \"9876543210\",\n    \"bio\": \"Updated bio information\",\n    \"socialLinks\": {\n        \"facebook\": \"https://facebook.com/johndoe.updated\",\n        \"linkedin\": \"https://linkedin.com/in/johndoe.updated\",\n        \"instagram\": \"https://instagram.com/johndoe.updated\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}"
							]
						},
						"description": "Update seller details"
					},
					"response": []
				},
				{
					"name": "Update Seller Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"Approved\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}",
								"status"
							]
						},
						"description": "Update seller status (admin only)"
					},
					"response": []
				},
				{
					"name": "Delete Seller",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sellers/{{sellerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sellers",
								"{{sellerId}}"
							]
						},
						"description": "Delete a seller (admin only)"
					},
					"response": []
				}
			],
			"description": "Endpoints for seller management"
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "Register Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data._id) {",
									"    pm.environment.set(\"customerId\", jsonData.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Smith\",\n    \"email\": \"jane.smith@example.com\",\n    \"phone\": \"9876543210\",\n    \"address\": \"123 Main St, Anytown, USA\",\n    \"interests\": [\"Residential\", \"Commercial\"],\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers"
							]
						},
						"description": "Register a new customer"
					},
					"response": []
				},
				{
					"name": "Get All Customers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers"
							]
						},
						"description": "Get all customers (admin only)"
					},
					"response": []
				},
				{
					"name": "Get Customer by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Get customer by ID"
					},
					"response": []
				},
				{
					"name": "Update Customer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Smith Updated\",\n    \"phone\": \"1122334455\",\n    \"address\": \"456 New St, Anytown, USA\",\n    \"interests\": [\"Residential\", \"Commercial\", \"Industrial\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Update customer details"
					},
					"response": []
				},
				{
					"name": "Delete Customer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Delete a customer (admin only)"
					},
					"response": []
				}
			],
			"description": "Endpoints for customer management"
		},
		{
			"name": "Properties",
			"item": [
				{
					"name": "Create Property",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data._id) {",
									"    pm.environment.set(\"propertyId\", jsonData.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Modern Apartment in City Center\",\n    \"type\": \"Residential\",\n    \"description\": \"A beautiful modern apartment located in the heart of the city\",\n    \"address\": {\n        \"house\": \"Apt 501\",\n        \"street\": \"123 Main Street\",\n        \"city\": \"New York\",\n        \"postalCode\": \"10001\"\n    },\n    \"price\": 500000,\n    \"discountPrice\": 480000,\n    \"beds\": 3,\n    \"baths\": 2,\n    \"options\": {\n        \"parkingSpot\": true,\n        \"furnished\": true\n    },\n    \"images\": [\n        \"https://example.com/property1.jpg\",\n        \"https://example.com/property2.jpg\",\n        \"https://example.com/property3.jpg\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/properties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties"
							]
						},
						"description": "Create a new property (seller or admin)"
					},
					"response": []
				},
				{
					"name": "Get All Properties",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/properties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties"
							],
							"query": [
								{
									"key": "type",
									"value": "Residential",
									"description": "Filter by property type",
									"disabled": true
								},
								{
									"key": "city",
									"value": "New York",
									"description": "Filter by city",
									"disabled": true
								},
								{
									"key": "minPrice",
									"value": "200000",
									"description": "Minimum price",
									"disabled": true
								},
								{
									"key": "maxPrice",
									"value": "600000",
									"description": "Maximum price",
									"disabled": true
								},
								{
									"key": "forSale",
									"value": "true",
									"description": "Available for sale",
									"disabled": true
								},
								{
									"key": "beds",
									"value": "2",
									"description": "Minimum number of bedrooms",
									"disabled": true
								},
								{
									"key": "baths",
									"value": "1",
									"description": "Minimum number of bathrooms",
									"disabled": true
								},
								{
									"key": "sellerId",
									"value": "{{sellerId}}",
									"description": "Filter by seller",
									"disabled": true
								}
							]
						},
						"description": "Get all properties with optional filters"
					},
					"response": []
				},
				{
					"name": "Get Property by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}"
							]
						},
						"description": "Get a property by ID"
					},
					"response": []
				},
				{
					"name": "Update Property",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Modern Apartment in City Center\",\n    \"description\": \"An updated description for this beautiful modern apartment\",\n    \"price\": 525000,\n    \"discountPrice\": 490000,\n    \"options\": {\n        \"parkingSpot\": true,\n        \"furnished\": false\n    },\n    \"images\": [\n        \"https://example.com/property1-updated.jpg\",\n        \"https://example.com/property2-updated.jpg\",\n        \"https://example.com/property3-updated.jpg\",\n        \"https://example.com/property4-updated.jpg\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}"
							]
						},
						"description": "Update property details (seller owner or admin)"
					},
					"response": []
				},
				{
					"name": "Update Property Availability",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forSale\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}/availability",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}",
								"availability"
							]
						},
						"description": "Update property availability status (seller owner or admin)"
					},
					"response": []
				},
				{
					"name": "Delete Property",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/properties/{{propertyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"properties",
								"{{propertyId}}"
							]
						},
						"description": "Delete a property (seller owner or admin)"
					},
					"response": []
				}
			],
			"description": "Endpoints for property management"
		},
		{
			"name": "Chats",
			"item": [
				{
					"name": "WebSocket Connection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "ws://{{baseUrl}}/ws",
							"protocol": "ws",
							"host": ["{{baseUrl}}"]
						}
					},
					"response": []
				},
				{
					"name": "Send Message",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "POST",
						"header": [{
							"key": "Content-Type",
							"value": "application/json"
						}],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sessionId\": \"{{chatSessionId}}\",\n    \"content\": \"Test message\",\n    \"sender\": \"user\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				},
				{
					"name": "Get Chat History",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [{
								"key": "token",
								"value": "{{authToken}}"
							}]
						},
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["api", "chats", "{{chatSessionId}}", "messages"]
						}
					},
					"response": []
				},
				{
					"name": "Create Chat Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data && jsonData.data.sessionId) {",
									"    pm.environment.set(\"chatSessionId\", jsonData.data.sessionId);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\": \"property_inquiry\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats"
							]
						},
						"description": "Create a new chat session"
					},
					"response": []
				},
				{
					"name": "Add Message to Chat",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"Hello, I'm interested in the property at 123 Main St. Is it still available?\",\n    \"fromBot\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"{{chatSessionId}}"
							]
						},
						"description": "Add a message to an existing chat session"
					},
					"response": []
				},
				{
					"name": "Get Chat by Session ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"{{chatSessionId}}"
							]
						},
						"description": "Get a chat session by its session ID"
					},
					"response": []
				},
				{
					"name": "Get User's Chats",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/chats/user/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"user",
								"{{userId}}"
							]
						},
						"description": "Get all chat sessions for a specific user"
					},
					"response": []
				},
				{
					"name": "Delete Chat",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/chats/{{chatSessionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chats",
								"{{chatSessionId}}"
							]
						},
						"description": "Delete a chat session"
					},
					"response": []
				}
			],
			"description": "Endpoints for chat management"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
{
    "name": "Chats",
    "item": [
        {
            "name": "List Chat Sessions",
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [{
                        "key": "token",
                        "value": "{{authToken}}"
                    }]
                },
                "method": "GET",
                "url": {
                    "raw": "{{baseUrl}}/api/chats",
                    "host": ["{{baseUrl}}"],
                    "path": ["api", "chats"]
                }
            },
            "response": []
        },
        {
            "name": "Get Chat Session Details",
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [{
                        "key": "token",
                        "value": "{{authToken}}"
                    }]
                },
                "method": "GET",
                "url": {
                    "raw": "{{baseUrl}}/api/chats/{{chatSessionId}}",
                    "host": ["{{baseUrl}}"],
                    "path": ["api", "chats", "{{chatSessionId}}"]
                }
            },
            "response": []
        },
        {
            "name": "Delete Chat Session",
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [{
                        "key": "token",
                        "value": "{{authToken}}"
                    }]
                },
                "method": "DELETE",
                "url": {
                    "raw": "{{baseUrl}}/api/chats/{{chatSessionId}}",
                    "host": ["{{baseUrl}}"],
                    "path": ["api", "chats", "{{chatSessionId}}"]
                }
            },
            "response": []
        },
        {
            "name": "Search Chat Messages",
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [{
                        "key": "token",
                        "value": "{{authToken}}"
                    }]
                },
                "method": "GET",
                "url": {
                    "raw": "{{baseUrl}}/api/chats/{{chatSessionId}}/search",
                    "host": ["{{baseUrl}}"],
                    "path": ["api", "chats", "{{chatSessionId}}", "search"],
                    "query": [{
                        "key": "query",
                        "value": "important",
                        "disabled": true
                    }]
                }
            },
            "response": []
        }
    ]
},
